import { Injectable, Inject, NotFoundException, InternalServerErrorException } from '@nestjs/common';
import { {{properCase entity}}Dto } from 'src/dtos/{{dashCase entity}}/dto/{{dashCase entity}}.dto';
import { {{properCase entity}}Repository } from '../interfaces/{{dashCase entity}}.interface';

@Injectable()
export class GetById{{properCase entity}}Service {
  constructor(
    @Inject('{{properCase entity}}Repository')
    private readonly repository: {{properCase entity}}Repository,
  ) {}

  async execute(id: string): Promise<{{properCase entity}}Dto> {
    try {
      const entity = await this.repository.findById(id);
      if (!entity) {
        throw new NotFoundException('{{properCase entity}} n√£o encontrado.');
      }
      return entity;
    } catch (error) {
      if (error instanceof NotFoundException) throw error;
      console.error('Erro ao buscar {{properCase entity}} por ID:', error.message);
      throw new InternalServerErrorException('Erro ao buscar {{properCase entity}} por ID.');
    }
  }
}
// Nome padronizado: GetByIdUserService e get-by-id-user.service.ts 