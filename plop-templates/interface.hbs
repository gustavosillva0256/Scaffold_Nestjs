import { Prisma, {{pascalCase entity}} } from '@prisma/client';
import { Create{{properCase entity}}Dto } from '../../../dtos/{{dashCase entity}}/dto/create-{{dashCase entity}}.dto';
import { Update{{properCase entity}}Dto } from '../../../dtos/{{dashCase entity}}/dto/update-{{dashCase entity}}.dto';

export interface {{properCase entity}}FindOptions {
  where?: Prisma.{{pascalCase entity}}WhereInput;
  orderBy?: Prisma.{{pascalCase entity}}OrderByWithRelationInput;
  limit?: number;
  offset?: number;
}

export interface {{properCase entity}}CountOptions {
  where?: Prisma.{{pascalCase entity}}WhereInput;
}

export interface {{properCase entity}}FilterOptions {
  search?: string;
  limit?: number;
  offset?: number;
}

export interface {{properCase entity}}Repository {
  create(data: Create{{properCase entity}}Dto): Promise<{{pascalCase entity}}>;
  findAll(options?: {{properCase entity}}FindOptions): Promise<{{pascalCase entity}}[]>;
  findById(id: number): Promise<{{pascalCase entity}} | null>;
  update(id: number, data: Update{{properCase entity}}Dto): Promise<{{pascalCase entity}}>;
  delete(id: number): Promise<{{pascalCase entity}}>;
  exists(id: number): Promise<boolean>;
  count(options?: {{properCase entity}}CountOptions): Promise<number>;
  findWithFilters(filters: {{properCase entity}}FilterOptions): Promise<{ {{camelCase entity}}s: {{pascalCase entity}}[]; total: number }>;
}
