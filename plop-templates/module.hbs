import { Module } from '@nestjs/common';
import { PrismaModule } from 'src/prisma/prisma.module';
import { AutomapperModule } from '@automapper/nestjs';
import { classes } from '@automapper/classes';

// Servi√ßos
import { Create{{properCase entity}}Service } from './services/create-{{dashCase entity}}.service';
import { Get{{properCase entity}}Service } from './services/get-{{dashCase entity}}.service';
import { GetById{{properCase entity}}Service } from './services/get-by-id-{{dashCase entity}}.service';
import { Update{{properCase entity}}Service } from './services/update-{{dashCase entity}}.service';
import { Delete{{properCase entity}}Service } from './services/delete-{{dashCase entity}}.service';

// Controllers
import { Create{{properCase entity}}Controller } from './controllers/create-{{dashCase entity}}.controller';
import { Get{{properCase entity}}Controller } from './controllers/get-{{dashCase entity}}.controller';
import { GetById{{properCase entity}}Controller } from './controllers/get-by-id-{{dashCase entity}}.controller';
import { Update{{properCase entity}}Controller } from './controllers/update-{{dashCase entity}}.controller';
import { Delete{{properCase entity}}Controller } from './controllers/delete-{{dashCase entity}}.controller';

// Repository
import { {{pascalCase entity}}PrismaRepository } from './prisma-repositorys/{{dashCase entity}}.prisma.repository';

// Mapper
import { {{properCase entity}}Mapper } from './mappers/{{dashCase entity}}.mapper';

@Module({
  imports: [
    AutomapperModule.forRoot({
      strategyInitializer: classes(),
    }),
    PrismaModule,
  ],
  controllers: [
    Create{{properCase entity}}Controller,
    Get{{properCase entity}}Controller,
    GetById{{properCase entity}}Controller,
    Update{{properCase entity}}Controller,
    Delete{{properCase entity}}Controller,
  ],
  providers: [
    Create{{properCase entity}}Service,
    Get{{properCase entity}}Service,
    GetById{{properCase entity}}Service,
    Update{{properCase entity}}Service,
    Delete{{properCase entity}}Service,
    {
      provide: '{{properCase entity}}Repository',
      useClass: {{pascalCase entity}}PrismaRepository,
    },
    {{properCase entity}}Mapper,
  ],
  exports: [
    Create{{properCase entity}}Service,
    Get{{properCase entity}}Service,
    GetById{{properCase entity}}Service,
    Update{{properCase entity}}Service,
    Delete{{properCase entity}}Service,
  ],
})
export class {{properCase entity}}Module {}
